hdtv.hsluv
==========

.. py:module:: hdtv.hsluv

.. autoapi-nested-parse::

   This module is generated by transpiling Haxe into Python and cleaning
   the resulting code by hand, e.g. removing unused Haxe classes. To try it
   yourself, clone https://github.com/hsluv/hsluv and run:

       haxe -cp haxe/src hsluv.Hsluv -python hsluv.py



Attributes
----------

.. autoapisummary::

   hdtv.hsluv.__version__
   hdtv.hsluv._m
   hdtv.hsluv._min_v
   hdtv.hsluv._ref_y
   hdtv.hsluv._ref_u
   hdtv.hsluv._ref_v
   hdtv.hsluv._kappa
   hdtv.hsluv._epsilon
   hdtv.hsluv.hsluv_to_rgb
   hdtv.hsluv.hpluv_to_rgb


Functions
---------

.. autoapisummary::

   hdtv.hsluv._normalize_output
   hdtv.hsluv._distance_line_from_origin
   hdtv.hsluv._length_of_ray_until_intersect
   hdtv.hsluv._get_bounds
   hdtv.hsluv._max_safe_chroma_for_l
   hdtv.hsluv._max_chroma_for_lh
   hdtv.hsluv._dot_product
   hdtv.hsluv._from_linear
   hdtv.hsluv._to_linear
   hdtv.hsluv._y_to_l
   hdtv.hsluv._l_to_y
   hdtv.hsluv.xyz_to_rgb
   hdtv.hsluv.rgb_to_xyz
   hdtv.hsluv.xyz_to_luv
   hdtv.hsluv.luv_to_xyz
   hdtv.hsluv.luv_to_lch
   hdtv.hsluv.lch_to_luv
   hdtv.hsluv.hsluv_to_lch
   hdtv.hsluv.lch_to_hsluv
   hdtv.hsluv.hpluv_to_lch
   hdtv.hsluv.lch_to_hpluv
   hdtv.hsluv.rgb_to_hex
   hdtv.hsluv.hex_to_rgb
   hdtv.hsluv.lch_to_rgb
   hdtv.hsluv.rgb_to_lch
   hdtv.hsluv._hsluv_to_rgb
   hdtv.hsluv.rgb_to_hsluv
   hdtv.hsluv._hpluv_to_rgb
   hdtv.hsluv.rgb_to_hpluv
   hdtv.hsluv.hsluv_to_hex
   hdtv.hsluv.hpluv_to_hex
   hdtv.hsluv.hex_to_hsluv
   hdtv.hsluv.hex_to_hpluv


Module Contents
---------------

.. py:data:: __version__
   :value: '5.0.0'


.. py:data:: _m

.. py:data:: _min_v
   :value: [[0.41239079926595, 0.35758433938387, 0.18048078840183], [0.21263900587151, 0.71516867876775,...


.. py:data:: _ref_y
   :value: 1.0


.. py:data:: _ref_u
   :value: 0.19783000664283


.. py:data:: _ref_v
   :value: 0.46831999493879


.. py:data:: _kappa
   :value: 903.2962962


.. py:data:: _epsilon
   :value: 0.0088564516


.. py:function:: _normalize_output(conversion)

.. py:function:: _distance_line_from_origin(line)

.. py:function:: _length_of_ray_until_intersect(theta, line)

.. py:function:: _get_bounds(l)

.. py:function:: _max_safe_chroma_for_l(l)

.. py:function:: _max_chroma_for_lh(l, h)

.. py:function:: _dot_product(a, b)

.. py:function:: _from_linear(c)

.. py:function:: _to_linear(c)

.. py:function:: _y_to_l(y)

.. py:function:: _l_to_y(l)

.. py:function:: xyz_to_rgb(_hx_tuple)

.. py:function:: rgb_to_xyz(_hx_tuple)

.. py:function:: xyz_to_luv(_hx_tuple)

.. py:function:: luv_to_xyz(_hx_tuple)

.. py:function:: luv_to_lch(_hx_tuple)

.. py:function:: lch_to_luv(_hx_tuple)

.. py:function:: hsluv_to_lch(_hx_tuple)

.. py:function:: lch_to_hsluv(_hx_tuple)

.. py:function:: hpluv_to_lch(_hx_tuple)

.. py:function:: lch_to_hpluv(_hx_tuple)

.. py:function:: rgb_to_hex(_hx_tuple)

.. py:function:: hex_to_rgb(_hex)

.. py:function:: lch_to_rgb(_hx_tuple)

.. py:function:: rgb_to_lch(_hx_tuple)

.. py:function:: _hsluv_to_rgb(_hx_tuple)

.. py:data:: hsluv_to_rgb

.. py:function:: rgb_to_hsluv(_hx_tuple)

.. py:function:: _hpluv_to_rgb(_hx_tuple)

.. py:data:: hpluv_to_rgb

.. py:function:: rgb_to_hpluv(_hx_tuple)

.. py:function:: hsluv_to_hex(_hx_tuple)

.. py:function:: hpluv_to_hex(_hx_tuple)

.. py:function:: hex_to_hsluv(s)

.. py:function:: hex_to_hpluv(s)

