hdtv.rfile_utils
================

.. py:module:: hdtv.rfile_utils

.. autoapi-nested-parse::

   Helper functions for access to ROOT files, treating them like POSIX
   directories



Classes
-------

.. autoapisummary::

   hdtv.rfile_utils.Quiet
   hdtv.rfile_utils.RootCdCompleter
   hdtv.rfile_utils.RootCompleter


Functions
---------

.. autoapisummary::

   hdtv.rfile_utils.GetSuggestions
   hdtv.rfile_utils.CombinedSuggestions
   hdtv.rfile_utils.RootSuggestions
   hdtv.rfile_utils.FileSuggestions
   hdtv.rfile_utils.GetRelDirectory
   hdtv.rfile_utils.Get
   hdtv.rfile_utils.RecursivePathMatch
   hdtv.rfile_utils.RecursiveROOTMatch
   hdtv.rfile_utils.IsROOTFile


Module Contents
---------------

.. py:class:: Quiet(level=ROOT.kInfo + 1)

   .. py:attribute:: level


   .. py:method:: __enter__()


   .. py:method:: __exit__(*a)


.. py:class:: RootCdCompleter

   Bases: :py:obj:`prompt_toolkit.completion.Completer`


   .. py:method:: get_completions(document, complete_event)


.. py:class:: RootCompleter

   Bases: :py:obj:`prompt_toolkit.completion.Completer`


   .. py:method:: get_completions(document, complete_event)


.. py:function:: GetSuggestions(document, dirs_only=False)

.. py:function:: CombinedSuggestions(text, dirs_only=False)

.. py:function:: RootSuggestions(text, dirs_only=False)

.. py:function:: FileSuggestions(text)

.. py:function:: GetRelDirectory(cur_posix_path, cur_root_dir, path)

   Resolve the relative path path with respect to the current directory
   specified by cur_posix_path and cur_root_dir.

   cur_posix_path is a string specifying the current working directory. If
   cur_root_dir is not None, it is taken as a TDirectoryFile object specifying
   the working directory inside the ROOT file. The ROOT file is expected to
   reside inside the directory specified by cur_posix_path.

   Returns a triple (new_posix_path, new_root_file, new_root_dir).
   new_posix_path is the new posix path.
   new_root_file is the ROOT file in which new_root_dir resides, or None if
   new_root_dir resides in the same file as cur_root_dir. If new_root_file is
   not None, the caller is expected to close the file after being done with it.
   (Note: a path moving out of a ROOT file and then back in
   is considered to refer to a different file, with the consequences mentioned
   above.)
   new_root_dir is the new ROOT TDirectory.

   If path is invalid, (None, None, None) is returned.


.. py:function:: Get(cur_posix_path, cur_root_dir, pattern)

   Function to load objects from ROOT files, treating them like POSIX
   directories.

   cur_posix_path specifies the current working directory.
   If cur_root_dir is a ROOT TDirectoryFile object, searching starts relative
   to that directory. If is is None, searching starts relative to
   cur_posix_path.    Pattern is a shell-style pattern, e.g. "*.root/spec/*".

   Returns a list of ROOT objects.


.. py:function:: RecursivePathMatch(cur_path, pcomp)

.. py:function:: RecursiveROOTMatch(rfile_path, rfile_dir, pcomp)

   Recursively descend into ROOT file directory structure.
   rfile_path is a string specifying the POSIX directory of the ROOT file
   rfile_dir is a TDirectoryFile object specifying the current directory
    in the ROOT file


.. py:function:: IsROOTFile(fname)

   Tests if fname is a ROOT file


