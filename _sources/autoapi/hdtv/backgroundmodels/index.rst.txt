hdtv.backgroundmodels
=====================

.. py:module:: hdtv.backgroundmodels


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/hdtv/backgroundmodels/background/index
   /autoapi/hdtv/backgroundmodels/exponential/index
   /autoapi/hdtv/backgroundmodels/interpolation/index
   /autoapi/hdtv/backgroundmodels/polynomial/index


Attributes
----------

.. autoapisummary::

   hdtv.backgroundmodels.BackgroundModels


Classes
-------

.. autoapisummary::

   hdtv.backgroundmodels.BackgroundModelExponential
   hdtv.backgroundmodels.BackgroundModelInterpolation
   hdtv.backgroundmodels.BackgroundModelPolynomial


Package Contents
----------------

.. py:class:: BackgroundModelExponential

   Bases: :py:obj:`hdtv.backgroundmodels.background.BackgroundModel`


   Exponential background model


   .. py:attribute:: fParStatus


   .. py:attribute:: fValidParStatus


   .. py:attribute:: name
      :value: 'exponential'



   .. py:attribute:: requiredBgRegions
      :value: 1



   .. py:method:: ResetParamStatus()

      Reset parameter status to defaults



   .. py:method:: GetFitter(integrate, likelihood, nparams=None, nbg=None)

      Creates a C++ Fitter object, which can then do the real work



.. py:class:: BackgroundModelInterpolation

   Bases: :py:obj:`hdtv.backgroundmodels.background.BackgroundModel`


   Interpolation background model


   .. py:attribute:: fParStatus


   .. py:attribute:: fValidParStatus


   .. py:attribute:: name
      :value: 'interpolation'



   .. py:attribute:: requiredBgRegions
      :value: 3



   .. py:method:: ResetParamStatus()

      Reset parameter status to defaults



   .. py:method:: GetFitter(integrate, likelihood, nparams=None, nbg=None)

      Creates a C++ Fitter object, which can then do the real work
      integrate and likelihood are ignored (do not make sense here)



.. py:class:: BackgroundModelPolynomial

   Bases: :py:obj:`hdtv.backgroundmodels.background.BackgroundModel`


   Polynomial background model


   .. py:attribute:: fParStatus


   .. py:attribute:: fValidParStatus


   .. py:attribute:: name
      :value: 'polynomial'



   .. py:attribute:: requiredBgRegions
      :value: 1



   .. py:method:: ResetParamStatus()

      Reset parameter status to defaults



   .. py:method:: GetFitter(integrate, likelihood, nparams=None, nbg=None)

      Creates a C++ Fitter object, which can then do the real work



.. py:data:: BackgroundModels

